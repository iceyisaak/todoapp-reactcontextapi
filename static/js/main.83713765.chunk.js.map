{"version":3,"sources":["contexts/TodoContext.js","components/TaskForm/TaskForm.js","components/TaskList/TaskItem.js/TaskItem.js","components/TaskList/TaskList.js","components/Home/Home.js","index.js"],"names":["TodoContext","createContext","TodoContextProvider","children","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","Provider","value","addTask","taskEntry","id","uuidv4","deleteTask","console","log","filter","task","editTask","clearTaskList","useTodoContext","useContext","TaskForm","setTaskEntry","onSubmit","e","preventDefault","type","onChange","target","placeholder","required","TaskItem","onClick","TaskList","length","map","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAIMA,EAAcC,0BAEdC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEvBC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAElE,EAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRL,aAAaM,QAAQ,QAASR,KAAKS,UAAUJ,MAC5C,CAACA,IA8BJ,OACE,cAACV,EAAYe,SAAb,CACEC,MAAO,CACLC,QA9BU,SAACC,GACfP,EAAS,GAAD,mBACHD,GADG,CAEN,CACEQ,YACAC,GAAIC,mBA0BJV,QACAW,WAtBa,SAACF,GAClBG,QAAQC,IAAI,eAAgBJ,GAC5BR,EACED,EAAMc,QAAO,SAACC,GACZ,OAAOA,EAAKN,KAAOA,OAmBnBO,SAVW,SAACR,EAAWC,GAC3BG,QAAQC,IAAI,aAAcL,EAAWC,IAUjCQ,cAfgB,WACpBhB,EAAS,MAQT,SASGR,KAMMyB,EAAiB,WAC5B,OAAOC,qBAAW7B,I,OCvBL8B,EAlCE,WAEf,IACEb,EACEW,IADFX,QAGF,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBa,EAAlB,KAYA,OACE,uBAAMC,SAPgB,SAACC,GACvBA,EAAEC,iBACFjB,EAAQC,GACRa,EAAa,KAIb,UACE,uBACEI,KAAK,OACLC,SAdkB,SAACH,GACvBF,EAAaE,EAAEI,OAAOrB,QAclBsB,YAAY,gBACZtB,MAAOE,EACPqB,UAAQ,IAEV,iCACE,cAAC,IAAD,UCROC,EArBE,SAAC,GAAc,IAAZf,EAAW,EAAXA,KAElB,EAAiCG,IAAzBP,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,SAUpB,OACE,+BACE,uBAAOS,KAAK,aADd,IAC6BV,EAAKP,UADlC,IAC6C,cAAC,IAAD,CAAeuB,QAN3C,WACjBf,EAASD,EAAKN,GAAIM,EAAKP,cAIvB,IACoF,cAAC,IAAD,CAAiBuB,QAVlF,WACnBpB,EAAWI,EAAKN,WCYLuB,EAhBE,WAEf,IAAQhC,EAAUkB,IAAVlB,MAER,OACE,gCACoB,IAAjBA,EAAMiC,QAAgB,yCACvB,6BACGjC,EAAMkC,KAAI,SAACnB,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKN,aCYf0B,EAnBF,WAEX,IAAQlB,EAAkBC,IAAlBD,cAER,OACE,qCACE,yCACA,mDACA,cAAC,EAAD,IACA,8BACE,cAAC,EAAD,MAEF,wBAAQc,QAASd,EAAjB,iCCbNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.83713765.chunk.js","sourcesContent":["import { useState, useContext, useEffect, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst TodoContext = createContext();\n\nconst TodoContextProvider = ({ children }) => {\n\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\n\n  const [tasks, setTasks] = useState(initialState);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  const addTask = (taskEntry) => {\n    setTasks([\n      ...tasks,\n      {\n        taskEntry,\n        id: uuidv4()\n      }\n    ]);\n  };\n\n  const deleteTask = (id) => {\n    console.log('deleteTask()', id);\n    setTasks(\n      tasks.filter((task) => {\n        return task.id !== id;\n      })\n    );\n  };\n\n  const clearTaskList = () => {\n    setTasks([]);\n  };\n\n  const editTask = (taskEntry, id) => {\n    console.log('editTask()', taskEntry, id);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        addTask,\n        tasks,\n        deleteTask,\n        editTask,\n        clearTaskList\n      }}\n    >\n      {children}\n    </TodoContext.Provider >\n  );\n\n};\n\nexport const useTodoContext = () => {\n  return useContext(TodoContext);\n};\n\nexport { TodoContext, TodoContextProvider };","import { useState } from 'react';\nimport { MdOutlineAddCircleOutline } from 'react-icons/md';\nimport { useTodoContext } from '../../contexts/TodoContext';\n\nconst TaskForm = () => {\n\n  const {\n    addTask,\n  } = useTodoContext();\n\n  const [taskEntry, setTaskEntry] = useState(\"\");\n\n  const onChangeHandler = (e) => {\n    setTaskEntry(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    addTask(taskEntry);\n    setTaskEntry('');\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <input\n        type=\"text\"\n        onChange={onChangeHandler}\n        placeholder='e.g. Shopping'\n        value={taskEntry}\n        required\n      />\n      <button>\n        <MdOutlineAddCircleOutline />\n      </button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useTodoContext } from '../../../contexts/TodoContext';\nimport { MdOutlineEdit, MdOutlineDelete } from 'react-icons/md';\n\nconst TaskItem = ({ task }) => {\n\n  const { deleteTask, editTask } = useTodoContext();\n\n  const onDeleteTask = () => {\n    deleteTask(task.id);\n  };\n\n  const onEditTask = () => {\n    editTask(task.id, task.taskEntry);\n  };\n\n  return (\n    <li>\n      <input type=\"checkbox\" /> {task.taskEntry} <MdOutlineEdit onClick={onEditTask} /> <MdOutlineDelete onClick={onDeleteTask} />\n    </li>\n  );\n};\n\n\n\nexport default TaskItem;\n","import { useTodoContext } from '../../contexts/TodoContext';\nimport TaskItem from \"./TaskItem.js/TaskItem\";\n\n\nconst TaskList = () => {\n\n  const { tasks } = useTodoContext();\n\n  return (\n    <div>\n      {tasks.length === 0 && <p>No Tasks</p>}\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem key={task.id} task={task} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import { useTodoContext } from '../../contexts/TodoContext';\nimport TaskForm from '../TaskForm/TaskForm';\nimport TaskList from '../TaskList/TaskList';\n\n// import style from './Home.module.scss';\n\nconst Home = () => {\n\n  const { clearTaskList } = useTodoContext();\n\n  return (\n    <>\n      <h1>TodoApp</h1>\n      <h4>React Context API</h4>\n      <TaskForm />\n      <div>\n        <TaskList />\n      </div>\n      <button onClick={clearTaskList}>\n        Clear Task List\n      </button>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home/Home';\nimport { TodoContextProvider } from './contexts/TodoContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContextProvider>\n      <Home />\n    </TodoContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}